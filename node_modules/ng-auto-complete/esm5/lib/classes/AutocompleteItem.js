/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function StrippedAutocompleteGroup() { }
if (false) {
    /** @type {?} */
    StrippedAutocompleteGroup.prototype.group;
    /** @type {?} */
    StrippedAutocompleteGroup.prototype.item;
}
var AutocompleteItem = /** @class */ (function () {
    function AutocompleteItem(title, id, className, original) {
        this.title = title;
        this.id = id;
        this.className = className;
        this.original = original;
    }
    return AutocompleteItem;
}());
export { AutocompleteItem };
if (false) {
    /** @type {?} */
    AutocompleteItem.prototype.title;
    /** @type {?} */
    AutocompleteItem.prototype.id;
    /** @type {?} */
    AutocompleteItem.prototype.children;
    /** @type {?} */
    AutocompleteItem.prototype.original;
    /** @type {?} */
    AutocompleteItem.prototype.className;
}
/**
 *
 * @param {?} items
 * @param {?} titleKey
 * @param {?=} childrenKey
 * @return {?}
 */
export function SearchableAutoCompleteItems(items, titleKey, childrenKey) {
    if (childrenKey === void 0) { childrenKey = null; }
    return items.reduce(function (r, i) {
        /** @type {?} */
        var t = SearchableAutoCompleteString(i[titleKey], i.id);
        if (typeof r[t] === 'undefined') {
            r[t] = TransformToAutocompleteItem(i, titleKey, childrenKey);
        }
        return r;
    }, {});
}
/**
 *
 * @param {?} key
 * @param {?} id
 * @return {?}
 */
export function SearchableAutoCompleteString(key, id) {
    return key.replace(/ /g, '_') + "_id_" + String(id);
}
/**
 *
 * @param {?} str
 * @return {?}
 */
export function ComparableAutoCompleteString(str) {
    return str.replace(/_/g, ' ');
}
/**
 * object must have an ID
 * @param {?} object
 * @param {?} titleKey
 * @param {?=} childrenKey
 * @return {?}
 */
export function TransformToAutocompleteItem(object, titleKey, childrenKey) {
    if (childrenKey === void 0) { childrenKey = null; }
    /** @type {?} */
    var item = new AutocompleteItem(object[titleKey], object.id, object.className, object);
    /**
     * if there are children, add these.
     */
    if (childrenKey !== null) {
        item.children = object[childrenKey];
    }
    return item;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXV0b2NvbXBsZXRlSXRlbS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWF1dG8tY29tcGxldGUvIiwic291cmNlcyI6WyJsaWIvY2xhc3Nlcy9BdXRvY29tcGxldGVJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSwrQ0FHQzs7O0lBRkcsMENBQXVCOztJQUN2Qix5Q0FBdUI7O0FBRzNCO0lBT0ksMEJBQVksS0FBYSxFQUFFLEVBQW1CLEVBQUUsU0FBaUIsRUFBRSxRQUFhO1FBQzVFLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUNMLHVCQUFDO0FBQUQsQ0FBQyxBQWJELElBYUM7Ozs7SUFaRyxpQ0FBYzs7SUFDZCw4QkFBcUI7O0lBQ3JCLG9DQUFnQjs7SUFDaEIsb0NBQWM7O0lBQ2QscUNBQWtCOzs7Ozs7Ozs7QUFhdEIsTUFBTSxVQUFVLDJCQUEyQixDQUFDLEtBQXVELEVBQUUsUUFBZ0IsRUFBRSxXQUFpQztJQUFqQyw0QkFBQSxFQUFBLGtCQUFpQztJQUNwSixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQzs7WUFDeEIsQ0FBQyxHQUFHLDRCQUE0QixDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDO1FBRXpELElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssV0FBVyxFQUFFO1lBQzdCLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRywyQkFBMkIsQ0FBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1NBQ2hFO1FBRUQsT0FBTyxDQUFDLENBQUM7SUFDYixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDWCxDQUFDOzs7Ozs7O0FBS0QsTUFBTSxVQUFVLDRCQUE0QixDQUFDLEdBQVcsRUFBRSxFQUFtQjtJQUN6RSxPQUFVLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxZQUFPLE1BQU0sQ0FBQyxFQUFFLENBQUcsQ0FBQztBQUN4RCxDQUFDOzs7Ozs7QUFLRCxNQUFNLFVBQVUsNEJBQTRCLENBQUMsR0FBVztJQUNwRCxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ2xDLENBQUM7Ozs7Ozs7O0FBTUQsTUFBTSxVQUFVLDJCQUEyQixDQUFDLE1BQTBFLEVBQUUsUUFBZ0IsRUFBRSxXQUFpQztJQUFqQyw0QkFBQSxFQUFBLGtCQUFpQzs7UUFDakssSUFBSSxHQUFHLElBQUksZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUM7SUFFeEY7O09BRUc7SUFDSCxJQUFJLFdBQVcsS0FBSyxJQUFJLEVBQUU7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7S0FDdkM7SUFFRCxPQUFPLElBQUksQ0FBQztBQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBTdHJpcHBlZEF1dG9jb21wbGV0ZUdyb3VwIHtcbiAgICBncm91cDogeyBrZXk6IHN0cmluZyB9O1xuICAgIGl0ZW06IEF1dG9jb21wbGV0ZUl0ZW07XG59XG5cbmV4cG9ydCBjbGFzcyBBdXRvY29tcGxldGVJdGVtIHtcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIGlkPzogc3RyaW5nIHwgbnVtYmVyO1xuICAgIGNoaWxkcmVuOiBhbnlbXTtcbiAgICBvcmlnaW5hbDogYW55O1xuICAgIGNsYXNzTmFtZTogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IodGl0bGU6IHN0cmluZywgaWQ6IHN0cmluZyB8IG51bWJlciwgY2xhc3NOYW1lOiBzdHJpbmcsIG9yaWdpbmFsOiBhbnkpIHtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgICAgICB0aGlzLm9yaWdpbmFsID0gb3JpZ2luYWw7XG4gICAgfVxufVxuXG4vKipcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBTZWFyY2hhYmxlQXV0b0NvbXBsZXRlSXRlbXMoaXRlbXM6IHsgaWQ/OiBzdHJpbmcgfCBudW1iZXI7IFt2YWx1ZTogc3RyaW5nXTogYW55IH1bXSwgdGl0bGVLZXk6IHN0cmluZywgY2hpbGRyZW5LZXk6IHN0cmluZyB8IG51bGwgPSBudWxsKTogeyBbdmFsdWU6IHN0cmluZ106IEF1dG9jb21wbGV0ZUl0ZW0gfSB7XG4gICAgcmV0dXJuIGl0ZW1zLnJlZHVjZShmdW5jdGlvbiAociwgaSkge1xuICAgICAgICBjb25zdCB0ID0gU2VhcmNoYWJsZUF1dG9Db21wbGV0ZVN0cmluZyhpW3RpdGxlS2V5XSwgaS5pZCk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiByW3RdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgclt0XSA9IFRyYW5zZm9ybVRvQXV0b2NvbXBsZXRlSXRlbShpLCB0aXRsZUtleSwgY2hpbGRyZW5LZXkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHI7XG4gICAgfSwge30pO1xufVxuXG4vKipcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBTZWFyY2hhYmxlQXV0b0NvbXBsZXRlU3RyaW5nKGtleTogc3RyaW5nLCBpZDogc3RyaW5nIHwgbnVtYmVyKSB7XG4gICAgcmV0dXJuIGAke2tleS5yZXBsYWNlKC8gL2csICdfJyl9X2lkXyR7U3RyaW5nKGlkKX1gO1xufVxuXG4vKipcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBDb21wYXJhYmxlQXV0b0NvbXBsZXRlU3RyaW5nKHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9fL2csICcgJyk7XG59XG5cbi8qKlxuICogb2JqZWN0IG11c3QgaGF2ZSBhbiBJRFxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBUcmFuc2Zvcm1Ub0F1dG9jb21wbGV0ZUl0ZW0ob2JqZWN0OiB7IGlkPzogc3RyaW5nIHwgbnVtYmVyOyBbdmFsdWU6IHN0cmluZ106IGFueSwgY2xhc3NOYW1lPzogc3RyaW5nIH0sIHRpdGxlS2V5OiBzdHJpbmcsIGNoaWxkcmVuS2V5OiBzdHJpbmcgfCBudWxsID0gbnVsbCkge1xuICAgIGNvbnN0IGl0ZW0gPSBuZXcgQXV0b2NvbXBsZXRlSXRlbShvYmplY3RbdGl0bGVLZXldLCBvYmplY3QuaWQsIG9iamVjdC5jbGFzc05hbWUsIG9iamVjdCk7XG5cbiAgICAvKipcbiAgICAgKiBpZiB0aGVyZSBhcmUgY2hpbGRyZW4sIGFkZCB0aGVzZS5cbiAgICAgKi9cbiAgICBpZiAoY2hpbGRyZW5LZXkgIT09IG51bGwpIHtcbiAgICAgICAgaXRlbS5jaGlsZHJlbiA9IG9iamVjdFtjaGlsZHJlbktleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGl0ZW07XG59XG4iXX0=