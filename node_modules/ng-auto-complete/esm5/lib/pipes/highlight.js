/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
var HighlightPipe = /** @class */ (function () {
    function HighlightPipe() {
    }
    /**
     * @param {?} text
     * @param {?} search
     * @return {?}
     */
    HighlightPipe.prototype.transform = /**
     * @param {?} text
     * @param {?} search
     * @return {?}
     */
    function (text, search) {
        if (search.length > 0) {
            return this.Strip(text).replace(new RegExp("" + this.EscapeMatch(search), 'gi'), function (match) {
                return "<span class=\"dropdown-item-highlight\">" + match + "</span>";
            });
        }
        else {
            return text;
        }
    };
    /**
     * @param {?} match
     * @return {?}
     */
    HighlightPipe.prototype.EscapeMatch = /**
     * @param {?} match
     * @return {?}
     */
    function (match) {
        /** @type {?} */
        var entityMap = {
            '&': '\\&',
            '<': '\\<',
            '>': '\\>',
            '/': '\\/',
            '=': '\\=',
            '+': '\\+',
            '-': '\\-',
            '#': '\\#',
            '!': '\\!',
            '@': '\\@',
            '$': '\\$',
            '%': '\\%',
            '^': '\\^',
            '*': '\\*',
            '(': '\\(',
            ')': '\\)',
        };
        return String(match).replace(/[&<>"'`=+\/]/g, function (s) {
            return entityMap[s];
        });
    };
    /**
     * @param {?=} str_in
     * @return {?}
     */
    HighlightPipe.prototype.Strip = /**
     * @param {?=} str_in
     * @return {?}
     */
    function (str_in) {
        if (str_in === void 0) { str_in = ''; }
        return str_in.replace(/<[^>]*>/g, '');
    };
    HighlightPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'highlight'
                },] }
    ];
    return HighlightPipe;
}());
export { HighlightPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGxpZ2h0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctYXV0by1jb21wbGV0ZS8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9oaWdobGlnaHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBRXBEO0lBQUE7SUEyQ0EsQ0FBQzs7Ozs7O0lBdENHLGlDQUFTOzs7OztJQUFULFVBQVUsSUFBWSxFQUFFLE1BQWM7UUFDbEMsSUFBSSxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNuQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksTUFBTSxDQUFDLEtBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxVQUFDLEtBQWE7Z0JBQzNGLE9BQU8sNkNBQXlDLEtBQUssWUFBUyxDQUFDO1lBQ25FLENBQUMsQ0FBQyxDQUFDO1NBQ047YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDO1NBQ2Y7SUFDTCxDQUFDOzs7OztJQUVELG1DQUFXOzs7O0lBQVgsVUFBWSxLQUFhOztZQUNmLFNBQVMsR0FBRztZQUNkLEdBQUcsRUFBRSxLQUFLO1lBQ1YsR0FBRyxFQUFFLEtBQUs7WUFDVixHQUFHLEVBQUUsS0FBSztZQUNWLEdBQUcsRUFBRSxLQUFLO1lBQ1YsR0FBRyxFQUFFLEtBQUs7WUFDVixHQUFHLEVBQUUsS0FBSztZQUNWLEdBQUcsRUFBRSxLQUFLO1lBQ1YsR0FBRyxFQUFFLEtBQUs7WUFDVixHQUFHLEVBQUUsS0FBSztZQUNWLEdBQUcsRUFBRSxLQUFLO1lBQ1YsR0FBRyxFQUFFLEtBQUs7WUFDVixHQUFHLEVBQUUsS0FBSztZQUNWLEdBQUcsRUFBRSxLQUFLO1lBQ1YsR0FBRyxFQUFFLEtBQUs7WUFDVixHQUFHLEVBQUUsS0FBSztZQUNWLEdBQUcsRUFBRSxLQUFLO1NBQ2I7UUFFRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQztZQUNyRCxPQUFPLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Ozs7O0lBRUQsNkJBQUs7Ozs7SUFBTCxVQUFNLE1BQW1CO1FBQW5CLHVCQUFBLEVBQUEsV0FBbUI7UUFDckIsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnQkExQ0osSUFBSSxTQUFDO29CQUNGLElBQUksRUFBRSxXQUFXO2lCQUNwQjs7SUF5Q0Qsb0JBQUM7Q0FBQSxBQTNDRCxJQTJDQztTQXhDWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AUGlwZSh7XG4gICAgbmFtZTogJ2hpZ2hsaWdodCdcbn0pXG5leHBvcnQgY2xhc3MgSGlnaGxpZ2h0UGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuXG4gICAgdHJhbnNmb3JtKHRleHQ6IHN0cmluZywgc2VhcmNoOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgICAgICBpZiAoc2VhcmNoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLlN0cmlwKHRleHQpLnJlcGxhY2UobmV3IFJlZ0V4cChgJHt0aGlzLkVzY2FwZU1hdGNoKHNlYXJjaCl9YCwgJ2dpJyksIChtYXRjaDogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGA8c3BhbiBjbGFzcz1cImRyb3Bkb3duLWl0ZW0taGlnaGxpZ2h0XCI+JHttYXRjaH08L3NwYW4+YDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBFc2NhcGVNYXRjaChtYXRjaDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGVudGl0eU1hcCA9IHtcbiAgICAgICAgICAgICcmJzogJ1xcXFwmJyxcbiAgICAgICAgICAgICc8JzogJ1xcXFw8JyxcbiAgICAgICAgICAgICc+JzogJ1xcXFw+JyxcbiAgICAgICAgICAgICcvJzogJ1xcXFwvJyxcbiAgICAgICAgICAgICc9JzogJ1xcXFw9JyxcbiAgICAgICAgICAgICcrJzogJ1xcXFwrJyxcbiAgICAgICAgICAgICctJzogJ1xcXFwtJyxcbiAgICAgICAgICAgICcjJzogJ1xcXFwjJyxcbiAgICAgICAgICAgICchJzogJ1xcXFwhJyxcbiAgICAgICAgICAgICdAJzogJ1xcXFxAJyxcbiAgICAgICAgICAgICckJzogJ1xcXFwkJyxcbiAgICAgICAgICAgICclJzogJ1xcXFwlJyxcbiAgICAgICAgICAgICdeJzogJ1xcXFxeJyxcbiAgICAgICAgICAgICcqJzogJ1xcXFwqJyxcbiAgICAgICAgICAgICcoJzogJ1xcXFwoJyxcbiAgICAgICAgICAgICcpJzogJ1xcXFwpJyxcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gU3RyaW5nKG1hdGNoKS5yZXBsYWNlKC9bJjw+XCInYD0rXFwvXS9nLCBmdW5jdGlvbiAocykge1xuICAgICAgICAgICAgcmV0dXJuIGVudGl0eU1hcFtzXTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgU3RyaXAoc3RyX2luOiBTdHJpbmcgPSAnJykge1xuICAgICAgICByZXR1cm4gc3RyX2luLnJlcGxhY2UoLzxbXj5dKj4vZywgJycpO1xuICAgIH1cbn1cbiJdfQ==