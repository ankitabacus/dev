{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ng-auto-complete/lib/classes/AutocompleteItem.ts","ng://ng-auto-complete/lib/utils/utils.ts","ng://ng-auto-complete/lib/dropdown/ng-dropdown.directive.ts","ng://ng-auto-complete/lib/completer/completer.component.ts","ng://ng-auto-complete/lib/ng-auto-complete.component.ts","ng://ng-auto-complete/lib/pipes/highlight.ts","ng://ng-auto-complete/lib/pipes/key-value.ts","ng://ng-auto-complete/lib/pipes/pipes.module.ts","ng://ng-auto-complete/lib/ng-auto-complete.module.ts","ng://ng-auto-complete/lib/classes/AutocompleteGroup.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","step","op","TypeError","done","value","pop","push","e","AutocompleteItem","title","id","className","original","SearchableAutoCompleteItems","items","titleKey","childrenKey","reduce","r","SearchableAutoCompleteString","TransformToAutocompleteItem","key","replace","String","ComparableAutoCompleteString","str","object","item","children","UsedCodeList","ArrowDown","ArrowUp","Enter","Escape","Tab","MetaLeft","AltLeft","ControlLeft","ShiftLeft","ArrowLeft","ArrowRight","MetaRight","AltRight","ReturnStringArrayByID","array","result","toString","IsMobileOrTablet","isMobile","test","navigator","userAgent","substr","NgDropdownDirective","_eref","list","active","parentDetector","input","element","completion","hover","EventEmitter","selected","closed","_open","_list","_class","inputKeydownBind","inputKeydown","bind","documentKeydownBind","documentKeydown","mouseoverListenerBind","mouseoverListener","ngOnInit","nativeElement","addEventListener","PrepareList","ngOnChanges","changes","firstChange","currentValue","keyDown","event","stopImmediatePropagation","stopPropagation","code","Open","SetActive","FindActive","DropdownFocusAreaDown","preventDefault","DropdownFocusAreaUp","EmitSelected","Close","RefExists","blur","shiftKey","OnMouseOver","movementX","movementY","el","target","srcElement","includes","Number","slice","emit","scroll","offsetHeight","scrollTop","GetElement","offsetTop","defineProperty","force","_this","close","RemoveListeners","ClearActive","contains","RegisterListeners","document","removeEventListener","setTimeout","classList","detectChanges","index","add","forEach","remove","keys","map","ActiveItem","PrepareChildrenList","DetermineActiveClass","DeReference","ngOnDestroy","Directive","args","selector","ElementRef","Input","Output","HostBinding","HostListener","CompleterComponent","_zone","cd","cleared","noResult","group","_change","Subject","_items","_completer","_highlight","_disabled","_DOM","notFound","empty","placeholder","isLoading","runOutsideAngular","pipe","debounceTime","subscribe","run","async","RunAsyncFunction","OnModelChange","SetItems","RegisterClick","SwitchDropdownState","DropdownArray","dropdown","CloseDropdown","OpenDropdown","IsInitialEmpty","SelectItem","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","then","InitialValue","ClearModel","searchLength","values","_a","SetNewValue","EmptySearch","CompareItemsAndSet","obj","toLowerCase","indexOf","OnInputBlurred","HasChosenValue","OnHoverDropdownItem","query","ClearValue","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","NgZone","ChangeDetectorRef","ViewChild","NgAutoCompleteComponent","cdr","classes","_viewHasBeenInit","_viewInitSubject","ngAfterViewChecked","init","querySelector","window","getComputedStyle","ListenToSelected","SetChildren","NoResult","InputCleared","parent","ResetInput","TriggerChange","completers","completer","GetInput","SubscribeInput","_bool","unsubscribe","SetValues","SetTemplate","type","SetAsync","promise","SetEnable","SetDisable","substring","RemovableValues","ids","Removables","ResetInputs","FindCompleter","filter","ViewChildren","HighlightPipe","transform","text","search","Strip","RegExp","EscapeMatch","match","entityMap","&","<",">","/","=","+","-","#","!","@","$","%","^","*","(",")","str_in","Pipe","name","KeyValuePipe","PipeModule","forRoot","ngModule","providers","NgModule","imports","declarations","exports","NgAutoCompleteModule","CommonModule","FormsModule","AutocompleteGroup","removals","SetCopy","FilterRemovals","_copy","initialValue","filtered","k","CreateNewAutocompleteGroup","NotUsedKey"],"mappings":"+dA6BO,IAAIA,EAAW,WAQlB,OAPAA,EAAWC,OAAOC,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,IAEKU,MAAMC,KAAMP,YAqChC,SAAgBQ,EAAYC,EAASC,GACjC,IAAsGC,EAAGC,EAAGhB,EAAGiB,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPpB,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOqB,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEM,KAAMC,EAAK,GAAIC,QAASD,EAAK,GAAIE,SAAUF,EAAK,IAAwB,mBAAXG,SAA0BV,EAAEU,OAAOC,UAAY,WAAa,OAAOjB,OAAUM,EACvJ,SAASO,EAAKrB,GAAK,OAAO,SAAU0B,GAAK,OACzC,SAASC,EAAKC,GACV,GAAIhB,EAAG,MAAM,IAAIiB,UAAU,mCAC3B,KAAOd,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAMhB,EAAY,EAAR+B,EAAG,GAASf,EAAU,UAAIe,EAAG,GAAKf,EAAS,YAAOhB,EAAIgB,EAAU,YAAMhB,EAAES,KAAKO,GAAI,GAAKA,EAAEO,SAAWvB,EAAIA,EAAES,KAAKO,EAAGe,EAAG,KAAKE,KAAM,OAAOjC,EAE3J,OADIgB,EAAI,EAAGhB,IAAG+B,EAAK,CAAS,EAARA,EAAG,GAAQ/B,EAAEkC,QACzBH,EAAG,IACP,KAAK,EAAG,KAAK,EAAG/B,EAAI+B,EAAI,MACxB,KAAK,EAAc,OAAXb,EAAEC,QAAgB,CAAEe,MAAOH,EAAG,GAAIE,MAAM,GAChD,KAAK,EAAGf,EAAEC,QAASH,EAAIe,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKb,EAAEI,IAAIa,MAAOjB,EAAEG,KAAKc,MAAO,SACxC,QACI,KAAkBnC,EAAe,GAA3BA,EAAIkB,EAAEG,MAAYhB,QAAcL,EAAEA,EAAEK,OAAS,MAAkB,IAAV0B,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEb,EAAI,EAAG,SACjG,GAAc,IAAVa,EAAG,MAAc/B,GAAM+B,EAAG,GAAK/B,EAAE,IAAM+B,EAAG,GAAK/B,EAAE,IAAM,CAAEkB,EAAEC,MAAQY,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYb,EAAEC,MAAQnB,EAAE,GAAI,CAAEkB,EAAEC,MAAQnB,EAAE,GAAIA,EAAI+B,EAAI,MAC7D,GAAI/B,GAAKkB,EAAEC,MAAQnB,EAAE,GAAI,CAAEkB,EAAEC,MAAQnB,EAAE,GAAIkB,EAAEI,IAAIc,KAAKL,GAAK,MACvD/B,EAAE,IAAIkB,EAAEI,IAAIa,MAChBjB,EAAEG,KAAKc,MAAO,SAEtBJ,EAAKjB,EAAKL,KAAKI,EAASK,GAC1B,MAAOmB,GAAKN,EAAK,CAAC,EAAGM,GAAIrB,EAAI,UAAeD,EAAIf,EAAI,EACtD,GAAY,EAAR+B,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEG,MAAOH,EAAG,GAAKA,EAAG,QAAK,EAAQE,MAAM,GArB9BH,CAAK,CAAC3B,EAAG0B,YCjEzD,SAAAS,EAAYC,EAAeC,EAAqBC,EAAmBC,GAC/D/B,KAAK4B,MAAQA,EACb5B,KAAK6B,GAAKA,EACV7B,KAAK8B,UAAYA,EACjB9B,KAAK+B,SAAWA,GAOxB,SAAgBC,EAA4BC,EAAyDC,EAAkBC,GACnH,YADmH,IAAAA,IAAAA,EAAA,MAC5GF,EAAMG,OAAO,SAAUC,EAAG9C,OACvBF,EAAIiD,EAA6B/C,EAAE2C,GAAW3C,EAAEsC,IAMtD,MAJoB,oBAATQ,EAAEhD,KACTgD,EAAEhD,GAAKkD,EAA4BhD,EAAG2C,EAAUC,IAG7CE,GACR,IAMP,SAAgBC,EAA6BE,EAAaX,GACtD,OAAUW,EAAIC,QAAQ,KAAM,KAAI,OAAOC,OAAOb,GAMlD,SAAgBc,EAA6BC,GACzC,OAAOA,EAAIH,QAAQ,KAAM,KAO7B,SAAgBF,EAA4BM,EAA4EX,EAAkBC,QAAA,IAAAA,IAAAA,EAAA,UAChIW,EAAO,IAAInB,EAAiBkB,EAAOX,GAAWW,EAAOhB,GAAIgB,EAAOf,UAAWe,GASjF,OAJoB,OAAhBV,IACAW,EAAKC,SAAWF,EAAOV,IAGpBW,MC7DLE,EAAe,CACjBC,UAAgB,GAChBC,QAAgB,GAChBC,MAAgB,GAChBC,OAAgB,GAChBC,IAAgB,EAChBC,SAAgB,GAChBC,QAAgB,GAChBC,YAAgB,GAChBC,UAAgB,GAChBC,UAAgB,GAChBC,WAAgB,GAChBC,UAAgB,GAChBC,SAAgB,IAWpB,SAAgBC,EAAsBC,GAClC,OAAOA,EAAM3B,OAAO,SAAC4B,EAAQlB,GAGzB,OAFAkB,EAAOvC,KAAKqB,EAAKjB,GAAGoC,YAEbD,GACR,IAeP,SAAgBE,QACRC,GAAW,EAMf,OALI,qUAAqUC,KAAKC,UAAUC,YACjV,0kDAA0kDF,KAAKC,UAAUC,UAAUC,OAAO,EAAG,OAChnDJ,GAAW,GAGRA,mBCfP,SAAAK,EAAmBC,GAAAzE,KAAAyE,MAAAA,EAlBHzE,KAAA0E,KAAc,GACd1E,KAAA2E,OAAc,KACd3E,KAAA4E,eAAoC,KAEpC5E,KAAA6E,MAAqB,KACrB7E,KAAA8E,QAAmB,KAEnB9E,KAAAwC,IAAc,GACdxC,KAAA+E,YAAsB,EAErB/E,KAAAgF,MAA2B,IAAIC,EAAAA,aAC/BjF,KAAAkF,SAA8B,IAAID,EAAAA,aAClCjF,KAAAmF,OAA4B,IAAIF,EAAAA,aAEjDjF,KAAAoF,OAAiB,EACjBpF,KAAAqF,MAAqD,GACrDrF,KAAAsF,OAAiB,GAoNTtF,KAAAuF,iBAAmBvF,KAAKwF,aAAaC,KAAKzF,MAS1CA,KAAA0F,oBAAsB1F,KAAK2F,gBAAgBF,KAAKzF,MAShDA,KAAA4F,sBAAwB5F,KAAK6F,kBAAkBJ,KAAKzF,MAyMhE,OAvaIwE,EAAA5E,UAAAkG,SAAA,WACI9F,KAAKsF,OAAS,WAAWtF,KAAKwC,IAAG,IAE5B0B,KACDlE,KAAKyE,MAAMsB,cAAcC,iBAAiB,YAAahG,KAAK4F,uBAMhE5F,KAAKiG,eAMTzB,EAAA5E,UAAAsG,YAAA,SAAYC,GACyB,oBAAtBA,EAAgB,QAAsBA,EAAgB,OAAEC,aAC/DpG,KAAKiG,cAEsB,oBAApBE,EAAc,OACrBnG,KAAK0E,KAAOyB,EAAc,KAAEE,aAK5BrG,KAAKiG,gBAObzB,EAAA5E,UAAA0G,QAAA,SAAQC,GAOJ,OANAA,EAAMC,2BACND,EAAME,kBAKEF,EAAMG,MACV,IAAK,YACD1G,KAAK2G,OAKL3G,KAAK4G,UAAU5G,KAAK6G,aAAe,GACnC7G,KAAK8G,wBAELP,EAAMQ,iBACN,MACJ,IAAK,UACD/G,KAAK2G,OAKL3G,KAAK4G,UAAU5G,KAAK6G,aAAe,GACnC7G,KAAKgH,sBAELT,EAAMQ,iBACN,MACJ,IAAK,QACD/G,KAAKiH,eACLjH,KAAKkH,MAAM,MAAM,GAEblH,KAAKmH,aACLnH,KAAK6E,MAAMuC,OAGfb,EAAMQ,iBACN,MACJ,IAAK,SACD/G,KAAKkH,MAAM,MAAM,GAEblH,KAAKmH,aACLnH,KAAK6E,MAAMuC,OAGfb,EAAMQ,iBACN,MACJ,IAAK,MACIR,EAAMc,UACPrH,KAAKiH,eAGTjH,KAAKkH,MAAM,MAAM,GACjB,MACJ,QACI,SAOZ1C,EAAA5E,UAAA0H,YAAA,SAAYf,GAER,GAAuB,GAAnBA,EAAMgB,WAAqC,GAAnBhB,EAAMiB,UAAlC,KAOMC,EAAUlB,EAAMmB,QAAUnB,EAAMoB,WACnB,EAAfF,EAAG5F,GAAGnC,QAAc+H,EAAG5F,GAAG+F,SAAS5H,KAAKsF,SACxCtF,KAAK4G,UAAUiB,OAAOJ,EAAG5F,GAAGiG,MAAM9H,KAAKsF,OAAO5F,OAAQ+H,EAAG5F,GAAGnC,YAOpE8E,EAAA5E,UAAAqH,aAAA,YAC6B,EAArBjH,KAAK6G,cACL7G,KAAKkF,SAAS6C,KAAK/H,KAAKqF,MAAMrF,KAAK6G,cAAcrE,MAOzDgC,EAAA5E,UAAAkH,sBAAA,eACQkB,EAAShI,KAAKyE,MAAMsB,cAAckC,aAAejI,KAAKyE,MAAMsB,cAAcmC,UAKzElI,KAAKmI,WAAWnI,KAAK6G,cAAcuB,UAAYpI,KAAKmI,WAAWnI,KAAK6G,cAAcoB,aAAgBD,IACnGhI,KAAKyE,MAAMsB,cAAcmC,UAAYlI,KAAKmI,WAAWnI,KAAK6G,cAAcuB,WAAapI,KAAKyE,MAAMsB,cAAckC,aAAejI,KAAKmI,WAAWnI,KAAK6G,cAAcoB,gBAOxKzD,EAAA5E,UAAAoH,oBAAA,eACQgB,EAAShI,KAAKyE,MAAMsB,cAAcmC,UAKlClI,KAAKmI,WAAWnI,KAAK6G,cAAcuB,UAAYJ,GAAmB,EAATA,IACzDhI,KAAKyE,MAAMsB,cAAcmC,UAAYlI,KAAKmI,WAAWnI,KAAK6G,cAAcuB,YAWhFjJ,OAAAkJ,eACI7D,EAAA5E,UAAA,SAAM,KADV,WAEI,OAAOI,KAAKoF,uCAYhBZ,EAAA5E,UAAAsH,MADA,SACMX,EAAO+B,GADb,IAAAC,EAAAvI,KAEI,QADS,IAAAsI,IAAAA,GAAA,GACJtI,KAAKoF,MAAV,KAIMoD,EAAQ,WACVD,EAAKnD,OAAQ,EAKbmD,EAAKE,kBACLF,EAAKG,cACLH,EAAKvD,MAAM+C,KAAK,MAChBQ,EAAKpD,OAAO4C,QAGZO,EACAE,IAICxI,KAAKoF,QAAWpF,KAAK8E,QAAQ6D,SAASpC,EAAMmB,SAC7Cc,MAOAhE,EAAA5E,UAAA4F,aAAR,SAAqBe,GACjBvG,KAAKsG,QAAQC,IAQT/B,EAAA5E,UAAA+F,gBAAR,SAAwBY,GACpBvG,KAAKsG,QAAQC,IAQT/B,EAAA5E,UAAAiG,kBAAR,SAA0BU,GACtBvG,KAAKsH,YAAYf,IAYrB/B,EAAA5E,UAAAgJ,kBAAA,WACQ5I,KAAKmH,aACLnH,KAAK6E,MAAMmB,iBAAiB,UAAWhG,KAAKuF,kBAG3CvF,KAAK+E,YACN8D,SAAS7C,iBAAiB,UAAWhG,KAAK0F,sBAOlDlB,EAAA5E,UAAA6I,gBAAA,WACQzI,KAAKmH,aACLnH,KAAK6E,MAAMiE,oBAAoB,UAAW9I,KAAKuF,kBAG9CvF,KAAK+E,YACN8D,SAASC,oBAAoB,UAAW9I,KAAK0F,qBAG5CxB,KACDlE,KAAKyE,MAAMsB,cAAc+C,oBAAoB,YAAa9I,KAAK4F,wBAOvEpB,EAAA5E,UAAA+G,KAAA,WAAA,IAAA4B,EAAAvI,KACI+I,WAAW,WACFR,EAAKnD,OAAUmD,EAAK9D,MAAMsB,cAAciD,UAAUL,SAAS,sBAC5DJ,EAAKK,oBAELL,EAAKnD,OAAQ,EACbmD,EAAKtC,cAKDsC,EAAK1B,aAAe,EACpB0B,EAAK9D,MAAMsB,cAAcmC,UAAY,EAErCK,EAAK9D,MAAMsB,cAAcmC,UAAYK,EAAKJ,WAAWI,EAAK1B,cAAcoB,aAAeM,EAAK1B,aAGhG0B,EAAK3D,eAAeqE,kBAEzB,IAMPzE,EAAA5E,UAAAuH,UAAA,WACI,MAA6B,oBAAfnH,KAAK6E,OAMvBL,EAAA5E,UAAAiH,WAAA,WACI,OAAO7G,KAAKqF,MAAMjD,OAAO,SAAC4B,EAAQlB,EAAMoG,GAKpC,OAJIpG,EAAK6B,SACLX,EAASkF,GAGNlF,IACP,IAMRQ,EAAA5E,UAAAgH,UAAA,SAAUsC,GACFA,EAAQlJ,KAAKqF,MAAM3F,OAAS,GAAKwJ,EAAQ,IAK7ClJ,KAAK0I,cAEL1I,KAAKqF,MAAM6D,GAAOvE,QAAS,EAC3B3E,KAAKgF,MAAM+C,KAAK/H,KAAKqF,MAAM6D,GAAO1G,KAIlCxC,KAAKmI,WAAWe,GAAOF,UAAUG,IAAI,YAMzC3E,EAAA5E,UAAAuI,WAAA,SAAWe,GACP,OAAOlJ,KAAKyE,MAAMsB,cAAchD,SAASmG,IAM7C1E,EAAA5E,UAAA8I,YAAA,WAAA,IAAAH,EAAAvI,KACIA,KAAKqF,MAAM+D,QAAQ,SAACtG,EAAMoG,GACtBpG,EAAK6B,QAAS,EAKd4D,EAAKJ,WAAWe,GAAOF,UAAUK,OAAO,aAOhD7E,EAAA5E,UAAAqG,YAAA,WAAA,IAAAsC,EAAAvI,KACIA,KAAKqF,MAAQlG,OAAOmK,KAAKtJ,KAAK0E,MAAM6E,IAAI,SAAC/G,GACrC,MAAO,CACHA,IAAGA,EACHmC,OAAQ4D,EAAKiB,WAAWhH,MAOhCxC,KAAKyJ,uBAMTjF,EAAA5E,UAAA4J,WAAA,SAAW1G,GACP,OAAuB,OAAhB9C,KAAK2E,QAAmB7B,IAAS9C,KAAK2E,QAMjDH,EAAA5E,UAAA8J,qBAAA,WAAA,IAAAnB,EAAAvI,KACIA,KAAKqF,MAAM+D,QAAQ,SAACtG,EAAMoG,QACgB,IAA3BX,EAAKJ,WAAWe,KAO3BX,EAAKJ,WAAWe,GAAOF,UAAUK,OAAO,UACpCvG,EAAK6B,QACL4D,EAAKJ,WAAWe,GAAOF,UAAUG,IAAI,cAQjD3E,EAAA5E,UAAA6J,oBAAA,WAAA,IAAAlB,EAAAvI,KACU0E,EAAO1E,KAAKyE,MAAMsB,cAAchD,SAEtCgG,WAAW,WACP,IAAK,IAAIxJ,EAAI,EAAGA,EAAImF,EAAKhF,OAAQH,IAC7BmF,EAAKnF,GAAGsC,GAAK0G,EAAKjD,OAAS/F,GAEhC,GAKHS,KAAK0J,wBAOTlF,EAAA5E,UAAA+J,YAAA,SAAY9G,GACD,IAAAC,EAAAD,EAAAC,KAKP,OAAO3D,OAAOC,OAAO,GAAEF,EAAA,GAAM4D,KAMjC0B,EAAA5E,UAAAgK,YAAA,WACI5J,KAAKyI,uCAjcZoB,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,4DAfVC,EAAAA,4CAkBCC,EAAAA,sBACAA,EAAAA,8BACAA,EAAAA,qBAEAA,EAAAA,uBACAA,EAAAA,mBAEAA,EAAAA,0BACAA,EAAAA,qBAEAC,EAAAA,yBACAA,EAAAA,uBACAA,EAAAA,uBAwKAC,EAAAA,YAAWL,KAAA,CAAC,6BAaZM,EAAAA,aAAYN,KAAA,CAAC,iBAAkB,CAAC,cA8PrCtF,kBC5UI,SAAA6F,EAAoBC,EAAsBC,GAAtBvK,KAAAsK,MAAAA,EAAsBtK,KAAAuK,GAAAA,EArBzBvK,KAAAwK,QAAgC,IAAIvF,EAAAA,aACpCjF,KAAAkF,SAAoD,IAAID,EAAAA,aAC7CjF,KAAAyK,SAAwC,IAAIxF,EAAAA,aAExDjF,KAAA0K,MAAK,GAErB1K,KAAA2K,QAA2B,IAAIC,EAAAA,QAC/B5K,KAAA6K,OAAgD,GAChD7K,KAAA8K,WAAqB,GACrB9K,KAAA+K,WAAqB,GACrB/K,KAAAgL,WAAqB,EAErBhL,KAAAiL,KAAO,CACHC,UAAQ,EACRC,OAAK,EACLC,YAAW,KACXlG,SAAQ,GACRmG,WAAS,GA8QjB,OApQIhB,EAAAzK,UAAAkG,SAAA,WAAA,IAAAyC,EAAAvI,KACIA,KAAKsK,MAAMgB,kBAAkB,WAEzB/C,EAAKoC,QAAQY,KACTC,EAAAA,aAAa,MACZC,UAAU,SAAClK,GACRgH,EAAK+B,MAAMoB,IAAI,WACc,OAArBnD,EAAKmC,MAAMiB,MACXpD,EAAKqD,iBAAiBrK,GAEtBgH,EAAKsD,cAActK,GAGvBgH,EAAKgC,GAAGtB,sBAKxBjJ,KAAK8L,YAMTzB,EAAAzK,UAAAmM,cAAA,WACS/L,KAAK0K,MAAM3F,YACZ/E,KAAKgM,uBAOb3B,EAAAzK,UAAAqM,cAAA,WACQjM,KAAK0K,MAAM3F,YACX/E,KAAKgM,uBAOb3B,EAAAzK,UAAAoM,oBAAA,WACQhM,KAAKkM,SAAS9G,MACdpF,KAAKmM,gBAOTnM,KAAKoM,gBAMT/B,EAAAzK,UAAAuM,cAAA,WACInM,KAAKkM,SAAS9G,OAAQ,EAKtBpF,KAAKiL,KAAKG,YAAc,MAM5Bf,EAAAzK,UAAAwM,aAAA,WACIpM,KAAKkM,SAASvF,OAKd3G,KAAKiL,KAAKG,YAAc,MAM5Bf,EAAAzK,UAAAkM,SAAA,WACI9L,KAAK6K,OAAS7K,KAAK0K,MAAMnJ,MACzBvB,KAAKqM,kBAMThC,EAAAzK,UAAA0M,WAAA,SAAWxJ,OACHvD,EAGAS,KAAKiL,KAAK/F,SAFM,iBAATpC,GACPvD,EAAIS,KAAK6K,OAAO/H,GACKA,GAGAR,GADrB/C,EAAIuD,GACmDlB,MAAOkB,EAAKjB,IAGvE7B,KAAK8K,WAAavL,EAAEqC,MACpB5B,KAAK+K,WAAa,GAElB/K,KAAKkM,SAAShF,MAAM,MAAM,GAC1BlH,KAAKkF,SAAS6C,KAAK,CAAC2C,MAAO,CAAClI,IAAKxC,KAAK0K,MAAMlI,KAAMM,KAAMvD,KAMtD8K,EAAAzK,UAAAgM,iBAAN,SAAuBrK,UJlN3B,SAyBgBgL,EAAUrM,EAASsM,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUvL,GAAS,IAAMJ,EAAKuL,EAAU9L,KAAKW,IAAW,MAAOG,GAAKmL,EAAOnL,IACpF,SAASqL,EAASxL,GAAS,IAAMJ,EAAKuL,EAAiB,SAAEnL,IAAW,MAAOG,GAAKmL,EAAOnL,IACvF,SAASP,EAAK6C,GAAUA,EAAO1C,KAAOsL,EAAQ5I,EAAOzC,OAAS,IAAIkL,EAAE,SAAUG,GAAWA,EAAQ5I,EAAOzC,SAAWyL,KAAKF,EAAWC,GACnI5L,GAAMuL,EAAYA,EAAU3M,MAAMG,EAASsM,GAAc,KAAK5L,uGIqL9DZ,KAAK8K,WAAavJ,EAClBvB,KAAK+K,WAAaxJ,EAElBvB,KAAKiL,KAAK/F,SAAW,KAEA,IAAjB3D,EAAM7B,OAAN,CAAA,EAAA,IACAM,KAAK0K,MAAMuC,eACXjN,KAAKkN,aAELlN,KAAKkM,SAAShF,MAAM,IAAI,wBACjB3F,EAAM7B,OAASM,KAAK0K,MAAMyC,cACjCnN,KAAKiL,KAAKI,WAAY,EAEP,CAAA,EAAMrL,KAAK0K,MAAMiB,MAAMpK,KAH/B,CAAA,EAAA,UAGD6L,EAASC,EAAA5M,OACfT,KAAK0K,MAAM4C,YAAYF,EAAQpN,KAAK0K,MAAMpB,KAAKpH,UAE/ClC,KAAKiL,KAAKI,WAAY,EAEtBrL,KAAK6K,OAAS7K,KAAK0K,MAAMnJ,MACzBvB,KAAKuN,YAAYvN,KAAK6K,OAAQtJ,GAG9BvB,KAAKqM,iBACLrM,KAAKkM,SAASvF,+BAGlB3G,KAAKuK,GAAGtB,0BAMZoB,EAAAzK,UAAAiM,cAAA,SAActK,GACVvB,KAAK8K,WAAavJ,EAClBvB,KAAK+K,WAAaxJ,EAElBvB,KAAKiL,KAAK/F,SAAW,KAEA,IAAjB3D,EAAM7B,OACNM,KAAKkN,aACE3L,EAAM7B,OAASM,KAAK0K,MAAMyC,cACjCnN,KAAKwN,mBAAmBjM,IAOhC8I,EAAAzK,UAAAsN,WAAA,WACIlN,KAAKiL,KAAK/F,SAAW,KACrBlF,KAAKiL,KAAKC,UAAW,EAErBlL,KAAKwK,QAAQzC,KAAK/H,KAAK0K,MAAMlI,MAMjC6H,EAAAzK,UAAA4N,mBAAA,SAAmBjM,OACTkM,EAAM,GACZ,IAAK,IAAMjL,KAAOxC,KAAK0K,MAAMnJ,OAC2D,EAAhFoB,EAA6BH,GAAKkL,cAAcC,QAAQpM,EAAMmM,iBAC9DD,EAAIjL,GAAOxC,KAAK0K,MAAMnJ,MAAMiB,IAIpCxC,KAAK6K,OAAS4C,EACdzN,KAAKuN,YAAYvN,KAAK6K,OAAQtJ,GAG9BvB,KAAKqM,iBACLrM,KAAKkM,SAASvF,QAMlB0D,EAAAzK,UAAAgO,eAAA,WACS5N,KAAK6N,kBAKN7N,KAAK6L,cAAc,KAO3BxB,EAAAzK,UAAAkO,oBAAA,SAAoBhL,GAUhB9C,KAAKiL,KAAKG,YATU,iBAATtI,EAIC,MAARA,EAKoBA,EAJI,KAJA9C,KAAK6K,OAAO/H,IAe5CuH,EAAAzK,UAAAyM,eAAA,WAC4C,IAApClN,OAAOmK,KAAKtJ,KAAK6K,QAAQnL,QAA2C,IAA3BM,KAAK8K,WAAWpL,OAK7DM,KAAKiL,KAAKE,OAAQ,EAJdnL,KAAKiL,KAAKE,OAAQ,GAU1Bd,EAAAzK,UAAAiO,eAAA,WACI,OAA8B,OAAvB7N,KAAKiL,KAAK/F,UAMrBmF,EAAAzK,UAAA2N,YAAA,SAAYE,EAAaM,GACS,EAA1B5O,OAAOmK,KAAKmE,GAAK/N,OACjBM,KAAKiL,KAAKC,UAAW,GAIzBlL,KAAKiL,KAAKC,UAAW,EACrBlL,KAAKyK,SAAS1C,KAAK,CAAC2C,MAAO,CAAClI,IAAKxC,KAAK0K,MAAMlI,KAAMuL,MAAOA,MAM7D1D,EAAAzK,UAAAoO,WAAA,WACIhO,KAAK8K,WAAa,GAClB9K,KAAKiL,KAAK/F,SAAW,KAErBlF,KAAK0K,MAAMuC,eACXjN,KAAKqM,iBAILrM,KAAKkF,SAAS6C,KAAK,CAAC2C,MAAO,CAAClI,IAAKxC,KAAK0K,MAAMlI,KAAMM,KAAM,4BAlY/DmL,EAAAA,UAASnE,KAAA,CAAC,CACPC,SAAU,eACVmE,SAAU,q7FA8FVC,gBAAiBC,EAAAA,wBAAwBC,eAxChC,k9BApE4BC,EAAAA,cAA4DC,EAAAA,uDA+GhGC,EAAAA,UAAS1E,KAAA,CAACtF,oBAEV0F,EAAAA,yBACAA,EAAAA,yBACAA,EAAAA,OAAMJ,KAAA,CAAC,4BAEPG,EAAAA,SA2RLI,KCjZAoE,EAAA,WA4CI,SAAAA,EAAoBC,GAAA1O,KAAA0O,IAAAA,EAVH1O,KAAAkF,SAAmD,IAAID,EAAAA,aAC5CjF,KAAAyK,SAAwC,IAAIxF,EAAAA,aAExDjF,KAAA0K,MAA6B,GAC7B1K,KAAAwC,IAAc,GACdxC,KAAA2O,QAAoB,GAEpC3O,KAAA4O,kBAA4B,EAC5B5O,KAAA6O,iBAAqC,IAAIjE,EAAAA,QA2S7C,OAtSI6D,EAAA7O,UAAAsG,YAAA,SAAYC,KAOZsI,EAAA7O,UAAAkG,SAAA,aAMA2I,EAAA7O,UAAAkP,mBAAA,WACI,IAAK9O,KAAK4O,iBAAkB,KACpBnH,EAAKzH,KAAK+O,KAAKhJ,cAAciJ,cAAc,oBAEN,EAArCC,OAAOC,iBAAiBzH,GAAI/H,SAC5BM,KAAK4O,kBAAmB,EACxB5O,KAAK6O,iBAAiBjO,MAAK,MAQvC6N,EAAA7O,UAAAuP,iBAAA,SAAiBjK,GACblF,KAAKkF,SAAS6C,KAAK7C,GAKnBlF,KAAKoP,YAAYlK,IAMrBuJ,EAAA7O,UAAAyP,SAAA,SAAS3E,GACL1K,KAAKyK,SAAS1C,KAAK2C,IAMvB+D,EAAA7O,UAAA0P,aAAA,SAAa9M,GAAb,IAAA+F,EAAAvI,KACIA,KAAK0K,MAAMtB,QAAQ,SAACsB,GACZA,EAAMlI,MAAQA,GAAOkI,EAAM6E,SAAW/M,GACtC+F,EAAKiH,WAAW9E,EAAMlI,OAO9BxC,KAAKyP,iBAMThB,EAAA7O,UAAAwP,YAAA,SAAYlK,GAAZ,IAAAqD,EAAAvI,KACIA,KAAK0K,MAAMtB,QAAQ,SAACtG,GAEZA,EAAKyM,QAAUrK,EAASwF,MAAMlI,MAC9B+F,EAAKiH,WAAW1M,EAAKN,KAKC,OAAlB0C,EAASpC,MAAmD,oBAA3BoC,EAASpC,KAAKC,UAC/CD,EAAKwK,YAAYpI,EAASpC,KAAKC,SAAUmC,EAASwF,MAAMpB,KAAKpH,aAQzElC,KAAKyP,iBAMThB,EAAA7O,UAAA6P,cAAA,WACIzP,KAAK0P,WAAWtG,QAAQ,SAACuG,GACrBA,EAAU7D,cAWlB2C,EAAA7O,UAAAgQ,SAAA,SAASpN,GACL,OAAOxC,KAAK0P,WAAWtN,OAAO,SAAC4B,EAAQ2L,GAKnC,OAJIA,EAAUjF,MAAMlI,MAAQA,IACxBwB,EAAS2L,GAGN3L,GACV,KAMLyK,EAAA7O,UAAAiQ,eAAA,SAAerN,EAAapC,GAA5B,IAAAmI,EAAAvI,KACI,GAAIA,KAAK4O,iBAAT,KACQe,EAAY3P,KAAK4P,SAASpN,GAK9BpC,EAAEuP,QAIN3P,KAAK6O,iBAAiBpD,UAAU,SAACqE,OACzBH,EAAYpH,EAAKqH,SAASpN,GAC9BuG,WAAW,WACP3I,EAAEuP,KAGNpH,EAAKsG,iBAAiBkB,iBAO9BtB,EAAA7O,UAAA4P,WAAA,SAAWhN,GACPxC,KAAK6P,eACDrN,EACA,SAACmN,GACGA,EAAU3B,gBAQtBS,EAAA7O,UAAAoQ,UAAA,SAAUxN,EAAa4K,GAAvB,IAAA7E,EAAAvI,KACIA,KAAK6P,eACDrN,EACA,SAACmN,GACGA,EAAUjF,MAAMsF,UAAU5C,GAK1B7E,EAAKkH,mBAQjBhB,EAAA7O,UAAAqQ,YAAA,SAAYzN,EAAa0N,EAA0DhC,GAAnF,IAAA3F,EAAAvI,KACIA,KAAK6P,eACDrN,EACA,SAACmN,GACGA,EAAUjF,MAAMwF,GAAQhC,EAKxB3F,EAAKkH,mBAQjBhB,EAAA7O,UAAAuQ,SAAA,SAAS3N,EAAa4N,GAAtB,IAAA7H,EAAAvI,KACIA,KAAK6P,eACDrN,EACA,SAACmN,GACGA,EAAUjF,MAAMiB,MAAQyE,EAKxB7H,EAAKkH,mBAQjBhB,EAAA7O,UAAAyQ,UAAA,SAAU7N,GAAV,IAAA+F,EAAAvI,KACIA,KAAK6P,eACDrN,EACA,SAACmN,GACGA,EAAU3E,WAAY,EAKtBzC,EAAKkH,mBAQjBhB,EAAA7O,UAAA0Q,WAAA,SAAW9N,GAAX,IAAA+F,EAAAvI,KACIA,KAAK6P,eACDrN,EACA,SAACmN,GACGA,EAAU3E,WAAY,EAKtBzC,EAAKkH,mBAQjBhB,EAAA7O,UAAA0M,WAAA,SAAW9J,EAAaX,GACpB7B,KAAK6P,eACDrN,EACA,SAACmN,GACGxQ,OAAOmK,KAAKqG,EAAU9E,QAAQzB,QAAQ,SAAC5G,OAC/BpC,EAAI,OAAOsC,OAAOb,GAGlBzB,IAFIoC,EAAI+N,UAAU/N,EAAImL,QAAQvN,GAAIoC,EAAI9C,SAGtCiQ,EAAUrD,WAAWqD,EAAU9E,OAAOrI,SAW1DiM,EAAA7O,UAAA4Q,gBAAA,SAAgBhO,EAAaiO,GAA7B,IAAAlI,EAAAvI,KACIA,KAAK6P,eACDrN,EACA,SAACmN,GACGA,EAAUjF,MAAMgG,WAAW5M,EAAsB2M,IAKjDlI,EAAKkH,mBAQjBhB,EAAA7O,UAAA+Q,YAAA,WAAA,IAAApI,EAAAvI,KACIA,KAAK0K,MAAMtB,QAAQ,SAACtG,GAChByF,EAAKiH,WAAW1M,EAAKN,QAWtBiM,EAAAmC,cAAP,SAAqBpO,EAAakC,OACxBiL,EAAYjL,EAAKmM,OAAO,SAAClB,GAC3B,OAAOnN,IAAQmN,EAAUnN,MAG7B,MAA4B,oBAAjBmN,EAAU,GACVA,EAAU,GAGd,0BA/Td1B,EAAAA,UAASnE,KAAA,CAAC,CACPC,SAAU,mBACVmE,SAAU,6ZArBVK,EAAAA,yDA8BCuC,EAAAA,aAAYhH,KAAA,CAACO,iBACbmE,EAAAA,UAAS1E,KAAA,CAAC,0BAEVI,EAAAA,yBACAA,EAAAA,OAAMJ,KAAA,CAAC,4BAEPG,EAAAA,mBACAA,EAAAA,uBACAA,EAAAA,SA8SLwE,EArVA,GCAAsC,EAAA,WAEA,SAAAA,KA2CA,OAtCIA,EAAAnR,UAAAoR,UAAA,SAAUC,EAAcC,GACpB,OAAoB,EAAhBA,EAAOxR,OACAM,KAAKmR,MAAMF,GAAMxO,QAAQ,IAAI2O,OAAO,GAAGpR,KAAKqR,YAAYH,GAAW,MAAO,SAACI,GAC9E,MAAO,yCAAyCA,EAAK,YAGlDL,GAIfF,EAAAnR,UAAAyR,YAAA,SAAYC,OACFC,EAAY,CACdC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,EAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,OAGT,OAAO7P,OAAO4O,GAAO7O,QAAQ,gBAAiB,SAAUnD,GACpD,OAAOiS,EAAUjS,MAIzByR,EAAAnR,UAAAuR,MAAA,SAAMqB,GACF,YADE,IAAAA,IAAAA,EAAA,IACKA,EAAO/P,QAAQ,WAAY,yBAzCzCgQ,EAAAA,KAAI3I,KAAA,CAAC,CACF4I,KAAM,gBA0CV3B,EA7CA,GCAA4B,EAAA,WAEA,SAAAA,KAeA,OAVIA,EAAA/S,UAAAoR,UAAA,SAAUzP,EAAYuI,OACdR,EAAO,GACX,IAAK,IAAI9G,KAAOjB,EACRA,EAAM1B,eAAe2C,IACrB8G,EAAK7H,KAAKe,GAIlB,OAAO8G,uBAbdmJ,EAAAA,KAAI3I,KAAA,CAAC,CACF4I,KAAM,WAcVC,EAjBA,GCAAC,EAAA,WAIA,SAAAA,KAaA,OANWA,EAAAC,QAAP,WACI,MAAO,CACHC,SAAUF,EACVG,UAAW,yBAVtBC,EAAAA,SAAQlJ,KAAA,CAAC,CACNmJ,QAAS,GACTC,aAAc,CAACnC,EAAe4B,GAC9BQ,QAAS,CAACpC,EAAe4B,OAU7BC,EAjBA,GCAAQ,EAAA,WAQA,SAAAA,KAiBA,2BAjBCJ,EAAAA,SAAQlJ,KAAA,CAAC,CACNmJ,QAAS,CACLI,EAAAA,aACAC,EAAAA,YACAV,EAAWC,WAEfM,QAAS,CACL1E,EACApE,GAEJ6I,aAAc,CACVzE,EACApE,EACA7F,OAIR4O,EAzBA,GCAAG,EAAA,WAwBI,SAAAA,IAVAvT,KAAA2L,MAAmF,KAO3E3L,KAAAwT,SAAqB,GA0FjC,OAjFID,EAAA3T,UAAA0N,YAAA,SAAY/L,EAAwDW,OAC1DkL,EAASpL,EAA4BT,EAAOW,GAClDlC,KAAKyT,QAAQrG,GAKbpN,KAAKuB,MAAQvB,KAAK0T,eAAe1T,KAAKwT,SAAUpG,IAMpDmG,EAAA3T,UAAA8Q,WAAA,SAAWD,GACPzQ,KAAKwT,SAAW/C,EAKhBzQ,KAAKuB,MAAQvB,KAAK0T,eAAe1T,KAAKwT,SAAUxT,KAAK2T,QAMzDJ,EAAA3T,UAAAqN,aAAA,WACIjN,KAAKuB,MAAQvB,KAAK0T,eAAe1T,KAAKwT,SAAUxT,KAAK4T,cAKrD5T,KAAKyT,QAAQzT,KAAK4T,eAMtBL,EAAA3T,UAAA6T,QAAA,SAAQrG,GACJpN,KAAK2T,MAAQxU,OAAOC,OAAO,GAAIgO,IAMnCmG,EAAA3T,UAAAoQ,UAAA,SAAUzO,GACNvB,KAAKuB,MAAQS,EAA4BT,EAAOvB,KAAKsJ,KAAKpH,SAAUlC,KAAKsJ,KAAKnH,aAK9EnC,KAAK4T,aAAezU,OAAOC,OAAO,GAAIY,KAAKuB,OAC3CvB,KAAKyT,QAAQtU,OAAOC,OAAO,GAAIY,KAAKuB,SAMxCgS,EAAA3T,UAAA8T,eAAA,SAAeF,EAAiBjS,OAGxBiB,EAFAqR,EAAW1U,OAAOC,OAAO,GAAImC,GAExB+H,EAAO,GAChB,IAAK9G,KAAOqR,EACJA,EAAShU,eAAe2C,IACxBgR,EAASpK,QAAQ,SAACvH,OAEVzB,EAAI,OAAOsC,OAAOb,GAGlBzB,IAFIoC,EAAI+N,UAAU/N,EAAImL,QAAQvN,GAAIoC,EAAI9C,SAGtC4J,EAAK7H,KAAKe,KAU1B,OAJA8G,EAAKF,QAAQ,SAAC0K,UACHD,EAASC,KAGbD,GAEfN,EA/GA,2PAoHA,SAAgBQ,EAA8B3I,EAAqB5I,EAAajB,EAAyD+H,EAAwDiG,EAAqBxK,EAA4BoI,QAAjD,IAAAoC,IAAAA,EAAA,SAAqB,IAAAxK,IAAAA,GAAA,QAA4B,IAAAoI,IAAAA,EAAA,OACxOzC,EAAQ,IAAI6I,EAelB,OAbA7I,EAAMlI,IAAMA,EACZkI,EAAMpB,KAAOA,EACboB,EAAMU,YAAcA,EACpBV,EAAM6E,OAASA,EACf7E,EAAM3F,WAAaA,EACnB2F,EAAMyC,aAAeA,EAMrBzC,EAAMsF,UAAUzO,GAETmJ,oER/FX,SAAgBgJ,EAAeF,EAAoB9O,GAC/C,OAAOA,EAAKmM,OAAO,SAAC/N,GAChB,OAAO0Q,EAAS7F,QAAQ7K,EAAKjB,GAAGoC,cAAgB,uCAiBxD,SAAgB+P,EAAWtN,GACvB,MAAqC,oBAAvB1D,EAAa0D","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface StrippedAutocompleteGroup {\n    group: { key: string };\n    item: AutocompleteItem;\n}\n\nexport class AutocompleteItem {\n    title: string;\n    id?: string | number;\n    children: any[];\n    original: any;\n    className: string;\n\n    constructor(title: string, id: string | number, className: string, original: any) {\n        this.title = title;\n        this.id = id;\n        this.className = className;\n        this.original = original;\n    }\n}\n\n/**\n *\n */\nexport function SearchableAutoCompleteItems(items: { id?: string | number; [value: string]: any }[], titleKey: string, childrenKey: string | null = null): { [value: string]: AutocompleteItem } {\n    return items.reduce(function (r, i) {\n        const t = SearchableAutoCompleteString(i[titleKey], i.id);\n\n        if (typeof r[t] === 'undefined') {\n            r[t] = TransformToAutocompleteItem(i, titleKey, childrenKey);\n        }\n\n        return r;\n    }, {});\n}\n\n/**\n *\n */\nexport function SearchableAutoCompleteString(key: string, id: string | number) {\n    return `${key.replace(/ /g, '_')}_id_${String(id)}`;\n}\n\n/**\n *\n */\nexport function ComparableAutoCompleteString(str: string) {\n    return str.replace(/_/g, ' ');\n}\n\n/**\n * object must have an ID\n */\n\nexport function TransformToAutocompleteItem(object: { id?: string | number; [value: string]: any, className?: string }, titleKey: string, childrenKey: string | null = null) {\n    const item = new AutocompleteItem(object[titleKey], object.id, object.className, object);\n\n    /**\n     * if there are children, add these.\n     */\n    if (childrenKey !== null) {\n        item.children = object[childrenKey];\n    }\n\n    return item;\n}\n","import { AutocompleteItem } from '../classes/AutocompleteItem';\n\nconst UsedCodeList = {\n    ArrowDown:      40,\n    ArrowUp:        38,\n    Enter:          13,\n    Escape:         27,\n    Tab:            9,\n    MetaLeft:       91,\n    AltLeft:        18,\n    ControlLeft:    17,\n    ShiftLeft:      16,\n    ArrowLeft:      37,\n    ArrowRight:     39,\n    MetaRight:      93,\n    AltRight:       18\n};\n\nexport interface GroupNoResult {\n    group: {key: string};\n    query: string;\n}\n\n/**\n *\n */\nexport function ReturnStringArrayByID(array: { id: string | number, [value: string]: any }[]) {\n    return array.reduce((result, item) => {\n        result.push(item.id.toString());\n\n        return result\n    }, [])\n}\n\n/**\n *\n */\nexport function FilterRemovals(removals: string[], list: AutocompleteItem[]) {\n    return list.filter((item) => {\n        return removals.indexOf(item.id.toString()) <= -1;\n    });\n}\n\n/**\n *\n */\nexport function IsMobileOrTablet() {\n    let isMobile = false;\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0, 4))) {\n        isMobile = true;\n    }\n\n    return isMobile\n}\n\nexport function NotUsedKey(code: string) {\n    return typeof UsedCodeList[code] === 'undefined';\n}\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ChangeDetectorRef\n} from '@angular/core';\nimport {IsMobileOrTablet} from '../utils/utils';\n\n@Directive({\n    selector: '[ngDropdown]'\n})\nexport class NgDropdownDirective implements OnChanges, OnInit, OnDestroy {\n    @Input() public list: any[] = [];\n    @Input() public active: any = null;\n    @Input() public parentDetector: ChangeDetectorRef = null;\n\n    @Input() public input: HTMLElement = null;\n    @Input() public element: Element = null;\n\n    @Input() public key: string = '';\n    @Input() public completion: boolean = true;\n\n    @Output() public hover: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public selected: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public closed: EventEmitter<any> = new EventEmitter<any>();\n\n    _open: boolean = false;\n    _list: { active: boolean, [value: string]: any }[] = [];\n    _class: string = '';\n\n    constructor(public _eref: ElementRef) {\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n        this._class = `dr-item-${this.key}-`;\n\n        if (!IsMobileOrTablet()) {\n            this._eref.nativeElement.addEventListener('mouseover', this.mouseoverListenerBind);\n        }\n\n        /**\n         *\n         */\n        this.PrepareList();\n    }\n\n    /**\n     *\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (typeof changes['active'] !== 'undefined' && !changes['active'].firstChange) {\n            this.PrepareList();\n        }\n        if (typeof changes['list'] !== 'undefined') {\n            this.list = changes['list'].currentValue;\n\n            /**\n             *\n             */\n            this.PrepareList();\n        }\n    }\n\n    /**\n     *\n     */\n    keyDown(event: KeyboardEvent) {\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n\n        /**\n         *\n         */\n        switch (event.code) {\n            case 'ArrowDown':\n                this.Open();\n\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() + 1);\n                this.DropdownFocusAreaDown();\n\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n                this.Open();\n\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() - 1);\n                this.DropdownFocusAreaUp();\n\n                event.preventDefault();\n                break;\n            case 'Enter':\n                this.EmitSelected();\n                this.Close(null, true);\n\n                if (this.RefExists()) {\n                    this.input.blur();\n                }\n\n                event.preventDefault();\n                break;\n            case 'Escape':\n                this.Close(null, true);\n\n                if (this.RefExists()) {\n                    this.input.blur();\n                }\n\n                event.preventDefault();\n                break;\n            case 'Tab':\n                if (!event.shiftKey) {\n                    this.EmitSelected();\n                }\n\n                this.Close(null, true);\n                break;\n            default:\n                return;\n        }\n    }\n\n    /**\n     *\n     */\n    OnMouseOver(event: MouseEvent) {\n        // Mouse didn't actually move, so no logic needed.\n        if (event.movementX == 0 && event.movementY == 0) {\n            return\n        }\n\n        /**\n         *\n         */\n        const el: any = event.target || event.srcElement;\n        if (el.id.length > 0 && el.id.includes(this._class)) {\n            this.SetActive(Number(el.id.slice(this._class.length, el.id.length)));\n        }\n    }\n\n    /**\n     *\n     */\n    EmitSelected() {\n        if (this.FindActive() > -1) {\n            this.selected.emit(this._list[this.FindActive()].key);\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownFocusAreaDown() {\n        let scroll = this._eref.nativeElement.offsetHeight + this._eref.nativeElement.scrollTop;\n\n        /**\n         *\n         */\n        if ((this.GetElement(this.FindActive()).offsetTop + this.GetElement(this.FindActive()).offsetHeight) > scroll) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop - (this._eref.nativeElement.offsetHeight - this.GetElement(this.FindActive()).offsetHeight)\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownFocusAreaUp() {\n        let scroll = this._eref.nativeElement.scrollTop;\n\n        /**\n         *\n         */\n        if (this.GetElement(this.FindActive()).offsetTop < scroll && scroll > 0) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop;\n        }\n    }\n\n    // =======================================================================//\n    // ! Bindings                                                             //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    @HostBinding('class.open')\n    get opened() {\n        return this._open;\n    }\n\n\n    // =======================================================================//\n    // ! Listeners                                                            //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    @HostListener('document:click', ['$event'])\n    Close(event, force: boolean = false) {\n        if (!this._open) {\n            return;\n        }\n\n        const close = () => {\n            this._open = false;\n\n            /**\n             * Emit NULL so listening components know what to do.\n             */\n            this.RemoveListeners();\n            this.ClearActive();\n            this.hover.emit(null);\n            this.closed.emit();\n        };\n\n        if (force) {\n            close();\n            return;\n        }\n\n        if ((this._open && (!this.element.contains(event.target)))) {\n            close();\n        }\n    }\n\n    /**\n     *\n     */\n    private inputKeydown(event: KeyboardEvent) {\n        this.keyDown(event);\n    }\n\n    private inputKeydownBind = this.inputKeydown.bind(this);\n\n    /**\n     *\n     */\n    private documentKeydown(event: KeyboardEvent) {\n        this.keyDown(event);\n    }\n\n    private documentKeydownBind = this.documentKeydown.bind(this);\n\n    /**\n     *\n     */\n    private mouseoverListener(event: MouseEvent) {\n        this.OnMouseOver(event);\n    }\n\n    private mouseoverListenerBind = this.mouseoverListener.bind(this);\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    RegisterListeners() {\n        if (this.RefExists()) {\n            this.input.addEventListener('keydown', this.inputKeydownBind);\n        }\n\n        if (!this.completion) {\n            document.addEventListener('keydown', this.documentKeydownBind);\n        }\n    }\n\n    /**\n     *\n     */\n    RemoveListeners() {\n        if (this.RefExists()) {\n            this.input.removeEventListener('keydown', this.inputKeydownBind);\n        }\n\n        if (!this.completion) {\n            document.removeEventListener('keydown', this.documentKeydownBind);\n        }\n\n        if (!IsMobileOrTablet()) {\n            this._eref.nativeElement.removeEventListener('mouseover', this.mouseoverListenerBind);\n        }\n    }\n\n    /**\n     *\n     */\n    Open() {\n        setTimeout(() => {\n            if (!this._open && !this._eref.nativeElement.classList.contains('is-initial-empty')) {\n                this.RegisterListeners();\n\n                this._open = true;\n                this.PrepareList();\n\n                /**\n                 *\n                 */\n                if (this.FindActive() < 0) {\n                    this._eref.nativeElement.scrollTop = 0;\n                } else {\n                    this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetHeight * this.FindActive();\n                }\n\n                this.parentDetector.detectChanges();\n            }\n        }, 0);\n    }\n\n    /**\n     *\n     */\n    RefExists() {\n        return typeof this.input !== 'undefined';\n    }\n\n    /**\n     *\n     */\n    FindActive(): number {\n        return this._list.reduce((result, item, index) => {\n            if (item.active) {\n                result = index;\n            }\n\n            return result;\n        }, -1);\n    }\n\n    /**\n     *\n     */\n    SetActive(index: number) {\n        if (index > this._list.length - 1 || index < 0) return;\n\n        /**\n         *\n         */\n        this.ClearActive();\n\n        this._list[index].active = true;\n        this.hover.emit(this._list[index].key);\n        /**\n         *\n         */\n        this.GetElement(index).classList.add('active');\n    }\n\n    /**\n     *\n     */\n    GetElement(index: number) {\n        return this._eref.nativeElement.children[index];\n    }\n\n    /**\n     *\n     */\n    ClearActive(): void {\n        this._list.forEach((item, index) => {\n            item.active = false;\n\n            /**\n             *\n             */\n            this.GetElement(index).classList.remove('active');\n        });\n    }\n\n    /**\n     *\n     */\n    PrepareList() {\n        this._list = Object.keys(this.list).map((key) => {\n            return {\n                key,\n                active: this.ActiveItem(key)\n            }\n        });\n\n        /**\n         *\n         */\n        this.PrepareChildrenList();\n    }\n\n    /**\n     *\n     */\n    ActiveItem(item: any) {\n        return this.active !== null && item === this.active;\n    }\n\n    /**\n     *\n     */\n    DetermineActiveClass() {\n        this._list.forEach((item, index) => {\n            if (typeof this.GetElement(index) === 'undefined') {\n                return;\n            }\n\n            /**\n             *\n             */\n            this.GetElement(index).classList.remove('active');\n            if (item.active)\n                this.GetElement(index).classList.add('active');\n        })\n\n    }\n\n    /**\n     *\n     */\n    PrepareChildrenList() {\n        const list = this._eref.nativeElement.children;\n\n        setTimeout(() => {\n            for (let i = 0; i < list.length; i++) {\n                list[i].id = this._class + i;\n            }\n        }, 0);\n\n        /**\n         *\n         */\n        this.DetermineActiveClass();\n\n    };\n\n    /**\n     *\n     */\n    DeReference(object: { active: boolean, [value: string]: any }) {\n        const {item} = object;\n\n        /**\n         *\n         */\n        return Object.assign({}, {...item});\n    }\n\n    /**\n     *\n     */\n    ngOnDestroy() {\n        this.RemoveListeners();\n    }\n}\n","import { debounceTime } from 'rxjs/operators';\nimport { Component, EventEmitter, Input, NgZone, OnInit, Output, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { AutocompleteGroup } from '../classes/AutocompleteGroup';\nimport {\n    AutocompleteItem,\n    ComparableAutoCompleteString,\n    SearchableAutoCompleteString,\n    StrippedAutocompleteGroup\n} from '../classes/AutocompleteItem';\nimport { NgDropdownDirective } from '../dropdown/ng-dropdown.directive';\nimport { GroupNoResult } from '../utils/utils';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'ng-completer',\n    template: `\n        <div #element class=\"ng-autocomplete-dropdown\"\n             [ngClass]=\"{'open': dropdown._open, 'is-loading': _DOM.isLoading, 'is-async': group.async !== null}\">\n\n            <!--GROUP: {{group.key}}-->\n\n            <div class=\"ng-autocomplete-inputs\" (click)=\"RegisterClick()\"\n                 [ngClass]=\"{'completion-off': !group.completion}\">\n                <span class=\"ng-autocomplete-placeholder\"\n                      *ngIf=\"_DOM.placeholder\">\n                  <ng-container *ngIf=\"group.placeholderValue\">\n                      <ng-template *ngTemplateOutlet=\"group.placeholderValue; context: {$implicit: _DOM.placeholder}\"></ng-template>\n                  </ng-container>\n                  <ng-template [ngIf]=\"!group.placeholderValue\">\n                      {{_DOM.placeholder.title}}\n                  </ng-template>\n                </span>\n                <input #input type=\"text\" [placeholder]=\"group.placeholder\" name=\"completer\" [ngModel]=\"_completer\"\n                       (ngModelChange)=\"_change.next($event);\"\n                       [value]=\"_completer\"\n                       [tabIndex]=\"_disabled ? -1 : 0\"\n                       autocomplete=\"new-password\"\n                       (focus)=\"OpenDropdown()\" class=\"ng-autocomplete-input\">\n\n                <span [ngClass]=\"{'open': dropdown._open}\" class=\"ng-autocomplete-dropdown-icon\"\n                      (click)=\"DropdownArray()\"></span>\n            </div>\n\n            <div class=\"ng-dropdown\" ngDropdown [list]=\"_items\" [element]=\"element\" [input]=\"input\"\n                 [ngClass]=\"{'is-initial-empty': _DOM.empty}\"\n                 [active]=\"_DOM.selected\" [key]=\"group.key\"\n                 [completion]=\"group.completion\"\n                 [parentDetector]=\"cd\"\n                 (hover)=\"OnHoverDropdownItem($event)\"\n                 (selected)=\"SelectItem($event)\"\n                 (closed)=\"OnInputBlurred()\"\n            >\n                <div *ngIf=\"_DOM.notFound && group.noResults\" class=\"dropdown-item no-results\">\n                    <ng-container *ngIf=\"group.noResults\">\n                        <ng-template *ngTemplateOutlet=\"group.noResults; context: {$implicit: _completer}\"></ng-template>\n                    </ng-container>\n                </div>\n\n                <div class=\"dropdown-item\" *ngFor=\"let item of _items | keys; let i = index\"\n                     (click)=\"SelectItem(_items[item])\" [ngClass]=\"_items[item].className\">\n                    <ng-container *ngIf=\"group.dropdownValue\">\n                        <ng-template\n                            *ngTemplateOutlet=\"group.dropdownValue; context: {$implicit: _items[item], highlight: _items[item].title | highlight:_highlight}\"></ng-template>\n                    </ng-container>\n\n                    <div *ngIf=\"!group.dropdownValue\" [innerHTML]=\"_items[item].title | highlight:_highlight\"></div>\n                </div>\n            </div>\n        </div>`,\n    styles: [`\n        .ng-autocomplete-inputs {\n            position: relative;\n        }\n\n        .ng-autocomplete-inputs input[type=text]::-ms-clear,\n        .ng-autocomplete-inputs input[type=text]::-ms-reveal {\n            display: none;\n            width: 0;\n            height: 0;\n        }\n\n        .ng-autocomplete-inputs.completion-off {\n            cursor: pointer;\n        }\n\n        .ng-autocomplete-inputs.completion-off input {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-placeholder {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-dropdown-icon {\n\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.is-empty {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.open {\n            display: block;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompleterComponent implements OnInit {\n    @ViewChild(NgDropdownDirective) public dropdown: NgDropdownDirective;\n\n    @Output() public cleared: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public selected: EventEmitter<StrippedAutocompleteGroup> = new EventEmitter<StrippedAutocompleteGroup>();\n    @Output('no-result') public noResult: EventEmitter<GroupNoResult> = new EventEmitter<GroupNoResult>();\n\n    @Input() public group: AutocompleteGroup = <AutocompleteGroup>{};\n\n    _change: Subject<string> = new Subject<string>();\n    _items: { [value: string]: AutocompleteItem } = {};\n    _completer: string = '';\n    _highlight: string = '';\n    _disabled: boolean = false;\n\n    _DOM = {\n        notFound: <boolean>false,\n        empty: <boolean>false,\n        placeholder: <AutocompleteItem>null,\n        selected: <string>'',\n        isLoading: <boolean>false\n\n    };\n\n    constructor(private _zone: NgZone, public cd: ChangeDetectorRef) {\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n        this._zone.runOutsideAngular(() => {\n\n            this._change.pipe(\n                debounceTime(300))\n                .subscribe((value: string) => {\n                    this._zone.run(() => {\n                        if (this.group.async !== null) {\n                            this.RunAsyncFunction(value);\n                        } else {\n                            this.OnModelChange(value);\n                        }\n\n                        this.cd.detectChanges();\n                    });\n                });\n        });\n\n        this.SetItems();\n    }\n\n    /**\n     * Only used when completion is off.\n     */\n    RegisterClick() {\n        if (!this.group.completion) {\n            this.SwitchDropdownState();\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownArray() {\n        if (this.group.completion) {\n            this.SwitchDropdownState();\n        }\n    }\n\n    /**\n     *\n     */\n    SwitchDropdownState() {\n        if (this.dropdown._open) {\n            this.CloseDropdown();\n            return;\n        }\n\n        /**\n         *\n         */\n        this.OpenDropdown();\n    }\n\n    /**\n     *\n     */\n    CloseDropdown() {\n        this.dropdown._open = false;\n\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    }\n\n    /**\n     *\n     */\n    OpenDropdown() {\n        this.dropdown.Open();\n\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    }\n\n    /**\n     *\n     */\n    SetItems() {\n        this._items = this.group.value;\n        this.IsInitialEmpty();\n    }\n\n    /**\n     *\n     */\n    SelectItem(item: AutocompleteItem | string) {\n        let i: AutocompleteItem;\n        if (typeof item === 'string') {\n            i = this._items[item];\n            this._DOM.selected = item;\n        } else {\n            i = item;\n            this._DOM.selected = SearchableAutoCompleteString(item.title, item.id);\n        }\n\n        this._completer = i.title;\n        this._highlight = '';\n\n        this.dropdown.Close(null, true);\n        this.selected.emit({group: {key: this.group.key}, item: i});\n    }\n\n    /**\n     *\n     */\n    async RunAsyncFunction(value: string) {\n        this._completer = value;\n        this._highlight = value;\n\n        this._DOM.selected = null;\n\n        if (value.length === 0) {\n            this.group.InitialValue();\n            this.ClearModel();\n\n            this.dropdown.Close('', true);\n        } else if (value.length > this.group.searchLength) {\n            this._DOM.isLoading = true;\n\n            const values = await this.group.async(value);\n            this.group.SetNewValue(values, this.group.keys.titleKey);\n\n            this._DOM.isLoading = false;\n\n            this._items = this.group.value;\n            this.EmptySearch(this._items, value);\n\n            // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n            this.IsInitialEmpty();\n            this.dropdown.Open();\n        }\n\n        this.cd.detectChanges();\n    }\n\n    /**\n     *\n     */\n    OnModelChange(value: string) {\n        this._completer = value;\n        this._highlight = value;\n\n        this._DOM.selected = null;\n\n        if (value.length === 0) {\n            this.ClearModel();\n        } else if (value.length > this.group.searchLength) {\n            this.CompareItemsAndSet(value);\n        }\n    }\n\n    /**\n     *\n     */\n    ClearModel() {\n        this._DOM.selected = null;\n        this._DOM.notFound = false;\n\n        this.cleared.emit(this.group.key);\n    }\n\n    /**\n     *\n     */\n    CompareItemsAndSet(value: string) {\n        const obj = {};\n        for (const key in this.group.value) {\n            if (ComparableAutoCompleteString(key).toLowerCase().indexOf(value.toLowerCase()) > -1) {\n                obj[key] = this.group.value[key];\n            }\n        }\n\n        this._items = obj;\n        this.EmptySearch(this._items, value);\n\n        // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n        this.IsInitialEmpty();\n        this.dropdown.Open();\n    }\n\n    /**\n     *\n     */\n    OnInputBlurred() {\n        if (!this.HasChosenValue()) {\n            /**\n             * Let component know completer input has been cleared -\n             * this function shows the list again, also resets children, if chosen.\n             */\n            this.OnModelChange('');\n        }\n    }\n\n    /**\n     *\n     */\n    OnHoverDropdownItem(item: AutocompleteItem | string) {\n        if (typeof item === 'string') {\n            this._DOM.placeholder = this._items[item];\n            return;\n        }\n        if (item == null) {\n            this._DOM.placeholder = null;\n            return;\n        }\n\n        this._DOM.placeholder = item;\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    IsInitialEmpty() {\n        if (Object.keys(this._items).length === 0 && this._completer.length === 0) {\n            this._DOM.empty = true;\n            return;\n        }\n\n        this._DOM.empty = false;\n    }\n\n    /**\n     *\n     */\n    HasChosenValue(): boolean {\n        return this._DOM.selected !== null;\n    }\n\n    /**\n     *\n     */\n    EmptySearch(obj: Object, query: string) {\n        if (Object.keys(obj).length > 0) {\n            this._DOM.notFound = false;\n            return;\n        }\n\n        this._DOM.notFound = true;\n        this.noResult.emit({group: {key: this.group.key}, query: query});\n    }\n\n    /**\n     *\n     */\n    ClearValue() {\n        this._completer = '';\n        this._DOM.selected = null;\n\n        this.group.InitialValue();\n        this.IsInitialEmpty();\n        /**\n         *\n         */\n        this.selected.emit({group: {key: this.group.key}, item: null});\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewChildren\n} from '@angular/core';\nimport {AutocompleteGroup} from './classes/AutocompleteGroup';\nimport {SelectedAutocompleteItem} from './classes/typing';\nimport {CompleterComponent} from './completer/completer.component';\nimport {GroupNoResult, ReturnStringArrayByID} from './utils/utils';\nimport {Subject} from 'rxjs';\n\n@Component({\n    selector: 'ng-auto-complete',\n    template: `\n        <div #init style=\"display: none;\"><span class=\"after-view-init\"></span></div>\n        <ng-completer [ngClass]=\"classes\" *ngFor=\"let item of group\" (cleared)=\"InputCleared($event)\"\n                      (no-result)=\"NoResult($event)\"\n                      (selected)=\"ListenToSelected($event)\"\n                      [group]=\"item\"></ng-completer>\n    `,\n})\nexport class NgAutoCompleteComponent implements OnInit {\n    @ViewChildren(CompleterComponent) public completers: QueryList<CompleterComponent>;\n    @ViewChild('init') public init: ElementRef;\n\n    @Output() public selected: EventEmitter<SelectedAutocompleteItem> = new EventEmitter<SelectedAutocompleteItem>();\n    @Output('no-result') public noResult: EventEmitter<GroupNoResult> = new EventEmitter<GroupNoResult>();\n\n    @Input() public group: AutocompleteGroup[] = [];\n    @Input() public key: string = '';\n    @Input() public classes: string[] = [];\n\n    _viewHasBeenInit: boolean = false;\n    _viewInitSubject: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private cdr: ChangeDetectorRef) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n    }\n\n    /**\n     *\n     */\n    ngAfterViewChecked() {\n        if (!this._viewHasBeenInit) {\n            let el = this.init.nativeElement.querySelector('.after-view-init');\n\n            if (window.getComputedStyle(el).length > 0) {\n                this._viewHasBeenInit = true;\n                this._viewInitSubject.next(true);\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    ListenToSelected(selected: SelectedAutocompleteItem) {\n        this.selected.emit(selected);\n\n        /**\n         *\n         */\n        this.SetChildren(selected);\n    }\n\n    /**\n     *\n     */\n    NoResult(group: GroupNoResult) {\n        this.noResult.emit(group);\n    }\n\n    /**\n     *\n     */\n    InputCleared(key: string) {\n        this.group.forEach((group) => {\n            if (group.key === key || group.parent === key) {\n                this.ResetInput(group.key);\n            }\n        });\n\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    }\n\n    /**\n     *\n     */\n    SetChildren(selected: SelectedAutocompleteItem) {\n        this.group.forEach((item) => {\n\n            if (item.parent == selected.group.key) {\n                this.ResetInput(item.key);\n\n                /**\n                 *\n                 */\n                if (selected.item !== null && typeof selected.item.children !== 'undefined') {\n                    item.SetNewValue(selected.item.children, selected.group.keys.titleKey);\n                }\n            }\n        });\n\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    }\n\n    /**\n     *\n     */\n    TriggerChange() {\n        this.completers.forEach((completer) => {\n            completer.SetItems();\n        });\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    GetInput(key: string): CompleterComponent {\n        return this.completers.reduce((result, completer) => {\n            if (completer.group.key === key) {\n                result = completer;\n            }\n\n            return result;\n        }, <CompleterComponent>{});\n    }\n\n    /**\n     *\n     */\n    SubscribeInput(key: string, f: (completer: CompleterComponent) => void) {\n        if (this._viewHasBeenInit) {\n            let completer = this.GetInput(key);\n\n            /**\n             *\n             */\n            f(completer);\n            return;\n        }\n\n        this._viewInitSubject.subscribe((_bool) => {\n            let completer = this.GetInput(key);\n            setTimeout(() => {\n                f(completer);\n            });\n\n            this._viewInitSubject.unsubscribe();\n        });\n    }\n\n    /**\n     *\n     */\n    ResetInput(key: string) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.ClearValue();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetValues(key: string, values: { id?: string | number; [value: string]: any }[]) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.SetValues(values);\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetTemplate(key: string, type: 'noResults' | 'placeholderValue' | 'dropdownValue', template: TemplateRef<any>) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group[type] = template;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetAsync(key: string, promise: (str: string) => Promise<{ id: string | number; [value: string]: any }[]>) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.async = promise;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetEnable(key: string) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer._disabled = false;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetDisable(key: string) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer._disabled = true;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SelectItem(key: string, id: string | number) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                Object.keys(completer._items).forEach((key) => {\n                    let f = `_id_${String(id)}`;\n                    let c = key.substring(key.indexOf(f), key.length);\n\n                    if (f === c) {\n                        completer.SelectItem(completer._items[key]);\n                    }\n                });\n\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    RemovableValues(key: string, ids: { id: string | number, [value: string]: any }[]) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.Removables(ReturnStringArrayByID(ids));\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    ResetInputs() {\n        this.group.forEach((item) => {\n            this.ResetInput(item.key);\n        });\n    }\n\n    // =======================================================================//\n    // ! Static (utils)                                                       //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    static FindCompleter(key: string, list: QueryList<NgAutoCompleteComponent>): NgAutoCompleteComponent {\n        const completer = list.filter((completer: NgAutoCompleteComponent) => {\n            return key === completer.key;\n        });\n\n        if (typeof completer[0] !== 'undefined') {\n            return completer[0];\n        }\n\n        return null;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    transform(text: string, search: string): string {\n        if (search.length > 0) {\n            return this.Strip(text).replace(new RegExp(`${this.EscapeMatch(search)}`, 'gi'), (match: string) => {\n                return `<span class=\"dropdown-item-highlight\">${match}</span>`;\n            });\n        } else {\n            return text;\n        }\n    }\n\n    EscapeMatch(match: string) {\n        const entityMap = {\n            '&': '\\\\&',\n            '<': '\\\\<',\n            '>': '\\\\>',\n            '/': '\\\\/',\n            '=': '\\\\=',\n            '+': '\\\\+',\n            '-': '\\\\-',\n            '#': '\\\\#',\n            '!': '\\\\!',\n            '@': '\\\\@',\n            '$': '\\\\$',\n            '%': '\\\\%',\n            '^': '\\\\^',\n            '*': '\\\\*',\n            '(': '\\\\(',\n            ')': '\\\\)',\n        };\n\n        return String(match).replace(/[&<>\"'`=+\\/]/g, function (s) {\n            return entityMap[s];\n        });\n    }\n\n    Strip(str_in: String = '') {\n        return str_in.replace(/<[^>]*>/g, '');\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'keys'\n})\nexport class KeyValuePipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        let keys = [];\n        for (let key in value) {\n            if (value.hasOwnProperty(key)) {\n                keys.push(key);\n            }\n        }\n\n        return keys;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {HighlightPipe} from './highlight';\nimport {KeyValuePipe} from './key-value';\n\n@NgModule({\n    imports: [],\n    declarations: [HighlightPipe, KeyValuePipe],\n    exports: [HighlightPipe, KeyValuePipe],\n})\nexport class PipeModule {\n\n    static forRoot() {\n        return {\n            ngModule: PipeModule,\n            providers: [],\n        };\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NgAutoCompleteComponent} from './ng-auto-complete.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CompleterComponent} from './completer/completer.component';\nimport {NgDropdownDirective} from './dropdown/ng-dropdown.directive';\nimport {PipeModule} from './pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PipeModule.forRoot()\n    ],\n    exports: [\n        NgAutoCompleteComponent,\n        CompleterComponent,\n    ],\n    declarations: [\n        NgAutoCompleteComponent,\n        CompleterComponent,\n        NgDropdownDirective\n    ]\n})\nexport class NgAutoCompleteModule {\n}\n","import { AutocompleteItem, SearchableAutoCompleteItems } from './AutocompleteItem';\nimport { TemplateRef } from '@angular/core';\n\nexport class AutocompleteGroup {\n    initialValue: { [value: string]: AutocompleteItem };\n\n    key: string;\n    keys: { titleKey: string, childrenKey: string | null };\n    value: { [value: string]: AutocompleteItem };\n    remove: string[];\n    placeholder: string;\n    parent: string;\n    completion: boolean;\n    searchLength: number;\n    async: (str: string) => Promise<{ id: string | number; [value: string]: any }[]> = null;\n\n    // Templates\n    noResults: TemplateRef<any>;\n    dropdownValue: TemplateRef<any>;\n    placeholderValue: TemplateRef<any>;\n\n    private removals: string[] = [];\n    private _copy: { [value: string]: AutocompleteItem };\n\n    constructor() {\n    }\n\n    /**\n     *\n     */\n    SetNewValue(value: { id: string | number; [value: string]: any }[], titleKey: string) {\n        const values = SearchableAutoCompleteItems(value, titleKey);\n        this.SetCopy(values);\n\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, values);\n    }\n\n    /**\n     *\n     */\n    Removables(ids: string[]) {\n        this.removals = ids;\n\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, this._copy);\n    }\n\n    /**\n     *\n     */\n    InitialValue() {\n        this.value = this.FilterRemovals(this.removals, this.initialValue);\n\n        /**\n         *\n         */\n        this.SetCopy(this.initialValue);\n    }\n\n    /**\n     *\n     */\n    SetCopy(values: { [value: string]: AutocompleteItem }) {\n        this._copy = Object.assign([], values);\n    }\n\n    /**\n     *\n     */\n    SetValues(value: { id?: string | number; [value: string]: any }[]) {\n        this.value = SearchableAutoCompleteItems(value, this.keys.titleKey, this.keys.childrenKey);\n\n        /**\n         *\n         */\n        this.initialValue = Object.assign({}, this.value);\n        this.SetCopy(Object.assign({}, this.value));\n    }\n\n    /**\n     *\n     */\n    FilterRemovals(removals: any[], value: { [value: string]: AutocompleteItem }): { [value: string]: AutocompleteItem } {\n        let filtered = Object.assign({}, value);\n\n        let key, keys = [];\n        for (key in filtered) {\n            if (filtered.hasOwnProperty(key)) {\n                removals.forEach((id) => {\n                    // Comparable string and ID\n                    let f = `_id_${String(id)}`;\n                    let c = key.substring(key.indexOf(f), key.length);\n\n                    if (f === c) {\n                        keys.push(key);\n                    }\n                })\n            }\n        }\n\n        keys.forEach((k) => {\n            delete filtered[k];\n        });\n\n        return filtered;\n    }\n}\n\n/**\n *\n */\nexport function CreateNewAutocompleteGroup<T>(placeholder: string, key: string, value: { id?: string | number; [value: string]: any }[], keys: { titleKey: string, childrenKey: string | null }, parent: string = '', completion: boolean = true, searchLength: number = 2): AutocompleteGroup {\n    const group = new AutocompleteGroup();\n\n    group.key = key;\n    group.keys = keys;\n    group.placeholder = placeholder;\n    group.parent = parent;\n    group.completion = completion;\n    group.searchLength = searchLength;\n\n    /**\n     * Initial value needed, if we empty search box or want to clear it, it needs to be reset.\n     * Setting copy, used if user wants to remove values (by id.). This _ list gets filtered.\n     */\n    group.SetValues(value);\n\n    return group;\n}\n"]}